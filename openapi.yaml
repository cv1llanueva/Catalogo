openapi: 3.0.1
info:
  version: 1.0.0
  title: "Catálogo de APIs de la Agencia de Seguros G&M"
  description: Listado de las APIS de la agencia G&M necesarios para su transformacion digital. El listado esta dividido entre  
        - Gestion de Clientes
        - Gestion y Distribución de Seguros
        - Productos y Servicios
        - Gestion de Pagos

paths:
  /clientes:
    get:
      tags:
        - Clientes
      summary: Obtener información de clientes
      description: Endpoint para obtener información de los clientes
      operationId: findPetsByStatus
      parameters:
        - name: status
          in: query
          description: Status values that need to be considered for filter
          required: false
          explode: true
          schema:
            type: string
            default: available
            enum:
              - available
              - pending
              - sold
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cliente'          
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cliente'
        '400':
          description: Invalid status value
      security:
        - petstore_auth:
            - write:pets
            - read:pets
    post:
      tags:
        - Clientes
      summary: Agregar un nuevo cliente
      description: Endpoint para agregar un nuevo cliente
      operationId: addCliente
      requestBody:
        description: Creacion de un nuevo cliente
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cliente'
          application/xml:
            schema:
              $ref: '#/components/schemas/Cliente'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Cliente'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cliente'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Cliente'
        '400':
          description: Invalid input
        '422':
          description: Validation exception
      security:
        - petstore_auth:
            - write:pets
            - read:pets
    put:
      tags:
        - Clientes
      summary: Actualizar información de un cliente
      description: Endpoint para actualizar información de un cliente existente
      operationId: updateCliente
      requestBody:
        description: Update an existent client in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cliente'
          application/xml:
            schema:
              $ref: '#/components/schemas/Cliente'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Cliente'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cliente'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Cliente'
        '400':
          description: Invalid ID supplied
        '404':
          description: Cliente not found
        '422':
          description: Validation exception
      security:
        - petstore_auth:
            - write:pets
  /clientes/{clientId}:
    delete:
      tags:
        - Clientes
      summary: Eliminar un cliente
      description: Endpoint para eliminar un cliente existente
      operationId: deleteClient
      parameters:
        - name: api_key
          in: header
          description: ''
          required: false
          schema:
            type: string
        - name: clientId
          in: path
          description: Client id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid client value
      security:
        - petstore_auth:
            - write:pets
            - read:pets

  /verificacion-identidad:
    get:
      tags:
        - Verificacion de Identidad
      summary: Verificar la identidad de un cliente
      description: Endpoint para verificar la identidad de un cliente
      responses:
        200:
          description: OK

  /evaluacion-cliente:
    get:
      tags:
        - Evaluacion del cliente (Riesgos)
      summary: Realizar evaluación de riesgos de un cliente
      description: Endpoint para realizar la evaluación de riesgos de un cliente
      responses:
        200:
          description: OK
    post:
      tags:
        - Evaluacion del cliente (Riesgos)
      summary: Agregar una nueva evaluación de riesgos
      description: Endpoint para agregar una nueva evaluación de riesgos de un cliente
      responses:
        201:
          description: Created
    put:
      tags:
        - Evaluacion del cliente (Riesgos)
      summary: Actualizar evaluación de riesgos
      description: Endpoint para actualizar la evaluación de riesgos de un cliente existente
      responses:
        200:
          description: OK
    delete:
      tags:
        - Evaluacion del cliente (Riesgos)
      summary: Eliminar evaluación de riesgos
      description: Endpoint para eliminar la evaluación de riesgos de un cliente existente
      responses:
        204:
          description: No Content

  /gestion-campanas:
    get:
      tags:
        - Gestion de Campañas
      summary: Obtener información de las campañas
      description: Endpoint para obtener información de las campañas de marketing
      responses:
        200:
          description: OK
    post:
      tags:
        - Gestion de Campañas
      summary: Crear una nueva campaña
      description: Endpoint para crear una nueva campaña de marketing
      responses:
        201:
          description: Created
    put:
      tags:
        - Gestion de Campañas
      summary: Actualizar información de una campaña
      description: Endpoint para actualizar información de una campaña existente
      responses:
        200:
          description: OK
    delete:
      tags:
        - Gestion de Campañas
      summary: Eliminar una campaña
      description: Endpoint para eliminar una campaña existente
      responses:
        204:
          description: No Content

  /asistencia-virtual:
    get:
      tags:
        - Asistencia virtual
      summary: Obtener asistencia virtual
      description: Endpoint para obtener asistencia virtual
      responses:
        200:
          description: OK
    post:
      tags:
        - Asistencia virtual
      summary: Solicitar asistencia virtual
      description: Endpoint para solicitar asistencia virtual
      responses:
        201:
          description: Created

  /cotizacion-seguros:
    get:
      tags:
        - Cotizacion de seguros
      summary: Obtener cotización de seguros
      description: Endpoint para obtener una cotización de seguros
      responses:
        200:
          description: OK
    post:
      tags:
        - Cotizacion de seguros
      summary: Solicitar cotización de seguros
      description: Endpoint para solicitar una cotización de seguros
      responses:
        201:
          description: Created

  /gestion-polizas:
    get:
      tags:
        - Gestion de Polizas
      summary: Obtener información de pólizas
      description: Endpoint para obtener información de las pólizas
      responses:
        200:
          description: OK
    post:
      tags:
        - Gestion de Polizas
      summary: Crear una nueva póliza
      description: Endpoint para crear una nueva póliza
      responses:
        201:
          description: Created
    put:
      tags:
        - Gestion de Polizas
      summary: Actualizar información de una póliza
      description: Endpoint para actualizar información de una póliza existente
      responses:
        200:
          description: OK
    delete:
      tags:
        - Gestion de Polizas
      summary: Eliminar una póliza
      description: Endpoint para eliminar una póliza existente
      responses:
        204:
          description: No Content

  /notificaciones:
    get:
      tags:
        - Notificaciones
      summary: Obtener notificaciones
      description: Endpoint para obtener notificaciones
      responses:
        200:
          description: OK
    post:
      tags:
        - Notificaciones
      summary: Enviar notificación
      description: Endpoint para enviar una notificación
      responses:
        201:
          description: Created

  /comparacion-productos:
    get:
      tags:
        - Comparacion de productos
      summary: Obtener comparación de productos
      description: Endpoint para obtener comparación de productos
      responses:
        200:
          description: OK
    post:
      tags:
        - Comparacion de productos
      summary: Comparar productos
      description: Endpoint para comparar productos
      responses:
        201:
          description: Created

  /reclamaciones:
    get:
      tags:
        - Reclamaciones
      summary: Obtener información de reclamaciones
      description: Endpoint para obtener información de reclamaciones
      responses:
        200:
          description: OK
    post:
      tags:
        - Reclamaciones
      summary: Presentar una reclamación
      description: Endpoint para presentar una reclamación
      responses:
        201:
          description: Created
    put:
      tags:
        - Reclamaciones
      summary: Actualizar información de una reclamación
      description: Endpoint para actualizar información de una reclamación existente
      responses:
        200:
          description: OK
    delete:
      tags:
        - Reclamaciones
      summary: Eliminar una reclamación
      description: Endpoint para eliminar una reclamación existente
      responses:
        204:
          description: No Content

  /autos:
    get:
      tags:
        - Autos
      summary: Obtener información de seguros de autos
      description: Endpoint para obtener información de seguros de autos
      responses:
        200:
          description: OK
    post:
      tags:
        - Autos
      summary: Solicitar seguro de auto
      description: Endpoint para solicitar un seguro de auto
      responses:
        201:
          description: Created

  /pyme:
    get:
      tags:
        - Pyme
      summary: Obtener información de seguros para PYMEs
      description: Endpoint para obtener información de seguros para pequeñas y medianas empresas
      responses:
        200:
          description: OK
    post:
      tags:
        - Pyme
      summary: Solicitar seguro para PYME
      description: Endpoint para solicitar un seguro para PYME
      responses:
        201:
          description: Created

  /vida:
    get:
      tags:
        - Vida
      summary: Obtener información de seguros de vida
      description: Endpoint para obtener información de seguros de vida
      responses:
        200:
          description: OK
    post:
      tags:
        - Vida
      summary: Solicitar seguro de vida
      description: Endpoint para solicitar un seguro de vida
      responses:
        201:
          description: Created

  /accidentes-personales:
    get:
      tags:
        - Accidentes Personales
      summary: Obtener información de seguros de accidentes personales
      description: Endpoint para obtener información de seguros de accidentes personales
      responses:
        200:
          description: OK
    post:
      tags:
        - Accidentes Personales
      summary: Solicitar seguro de accidentes personales
      description: Endpoint para solicitar un seguro de accidentes personales
      responses:
        201:
          description: Created

  /hogar:
    get:
      tags:
        - Hogar
      summary: Obtener información de seguros de hogar
      description: Endpoint para obtener información de seguros de hogar
      responses:
        200:
          description: OK
    post:
      tags:
        - Hogar
      summary: Solicitar seguro de hogar
      description: Endpoint para solicitar un seguro de hogar
      responses:
        201:
          description: Created

  /viaje:
    get:
      tags:
        - Viaje
      summary: Obtener información de seguros de viaje
      description: Endpoint para obtener información de seguros de viaje
      responses:
        200:
          description: OK
    post:
      tags:
        - Viaje
      summary: Solicitar seguro de viaje
      description: Endpoint para solicitar un seguro de viaje
      responses:
        201:
          description: Created

  /pagos:
    get:
      tags:
        - Pagos
      summary: Obtener información de pagos
      description: Endpoint para obtener información de pagos
      responses:
        200:
          description: OK
    post:
      tags:
        - Pagos
      summary: Realizar un pago
      description: Endpoint para realizar un pago
      responses:
        201:
          description: Created

  /transferencias:
    get:
      tags:
        - Transferencias
      summary: Obtener información de transferencias
      description: Endpoint para obtener información de transferencias
      responses:
        200:
          description: OK
    post:
      tags:
        - Transferencias
      summary: Realizar una transferencia
      description: Endpoint para realizar una transferencia
      responses:
        201:
          description: Created
components:
  schemas:
    Order:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        petId:
          type: integer
          format: int64
          example: 198772
        quantity:
          type: integer
          format: int32
          example: 7
        shipDate:
          type: string
          format: date-time
        status:
          type: string
          description: Order Status
          example: approved
          enum:
            - placed
            - approved
            - delivered
        complete:
          type: boolean
      xml:
        name: order
    Customer:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 100000
        username:
          type: string
          example: fehguy
        address:
          type: array
          xml:
            name: addresses
            wrapped: true
          items:
            $ref: '#/components/schemas/Address'
      xml:
        name: customer
    Address:
      type: object
      properties:
        street:
          type: string
          example: 437 Lytton
        city:
          type: string
          example: Palo Alto
        state:
          type: string
          example: CA
        zip:
          type: string
          example: '94301'
      xml:
        name: address
    Seguro:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Carro
      xml:
        name: category
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        username:
          type: string
          example: theUser
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: James
        email:
          type: string
          example: john@email.com
        password:
          type: string
          example: '12345'
        phone:
          type: string
          example: '12345'
        userStatus:
          type: integer
          description: User Status
          format: int32
          example: 1
      xml:
        name: user
    Tag:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
      xml:
        name: tag
    Cliente:
      required:
        - name
        - photoUrls
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          example: Carlos
        apellido:
          type: string
          example: Villanueva
        seguro:
          $ref: '#/components/schemas/Seguro'
        photoUrls:
          type: array
          xml:
            wrapped: true
          items:
            type: string
            xml:
              name: photoUrl
        tags:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/Tag'
        status:
          type: string
          description: pet status in the store
          enum:
            - available
            - pending
            - sold
      xml:
        name: pet
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
      xml:
        name: '##default'
  requestBodies:
    Pet:
      description: Pet object that needs to be added to the store
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Cliente'
        application/xml:
          schema:
            $ref: '#/components/schemas/Cliente'
    UserArray:
      description: List of user object
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/User'
  securitySchemes:
    petstore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://petstore3.swagger.io/oauth/authorize
          scopes:
            write:pets: modify pets in your account
            read:pets: read your pets
    api_key:
      type: apiKey
      name: api_key
      in: header
